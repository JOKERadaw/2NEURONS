import numpy as np
import matplotlib.pyplot as plt
import math
dosage=np.arange(0,1.1,0.1)
effective=[0,1,0] #dotssss that have to be predicted
trainingtimes=481 #how much we train this sbad boy
learning_rate=0.1 #how much he have to study too much is bad 
e=2.71828
weight_one=-0.60
weight_two=3
weight_three=0.4
weight_four=0.5
bias_one=0
bias_two=0
bias_three=0
yone=[]
ytwo=[]
yvalues=[]


INPUTS=[0,0.5,1]
for j in range(trainingtimes):
    dw1=0
    db1=0

    dw2=0


    db2=0

    dw3=0

    dw4=0

    db3=0
    
    for i in range(3):
        neuron_one=INPUTS[i]*weight_one+bias_one
        neuron_two=INPUTS[i]*weight_two+bias_two

        neuron_oneactivated=math.log(1+2.71828**neuron_one,2.718)
        neuron_twoactivated=math.log(1+2.71828**neuron_two,2.718)
        output=neuron_oneactivated*weight_three+neuron_twoactivated*weight_four+bias_three
        dw1+=-2*(effective[i]-output)*weight_three*((e**neuron_one)/(1+e**neuron_one))*INPUTS[i]
        db1+=-2*(effective[i]-output)*weight_three*((e**neuron_one)/(1+e**neuron_one))
        dw2+=-2*(effective[i]-output)*weight_four*((e**neuron_two)/(1+e**neuron_two))*INPUTS[i]
        db2+=-2*(effective[i]-output)*weight_four*((e**neuron_two)/(1+e**neuron_two))
        dw3+=-2*(effective[i]-output)*neuron_oneactivated
        dw4+=-2*(effective[i]-output)*neuron_twoactivated
        db3+=-2*(effective[i]-output)


    step=dw1*learning_rate
    weight_one=weight_one-step
    step=dw2*learning_rate
    weight_two=weight_two-step

    step=dw3*learning_rate
    weight_three-=step

    step=dw4*learning_rate
    weight_four-=step

    step=db1*learning_rate
    bias_one-=step

    step=db2*learning_rate
    bias_two-=step

    step=db3*learning_rate
    bias_three-=step

for inputs in dosage:
    neuron_one=inputs*weight_one+bias_one
    neuron_two=inputs*weight_two+bias_two

    neuron_oneactivated=math.log(1+2.71828**neuron_one,2.718)
    neuron_twoactivated=math.log(1+2.71828**neuron_two,2.718)

    output=neuron_oneactivated*weight_three+neuron_twoactivated*weight_four+bias_three
    yone.append(neuron_oneactivated)
    ytwo.append(neuron_twoactivated)
    yvalues.append(output)
    
    
plt.plot(np.arange(0,1.1,0.1),yvalues,linewidth=10)
plt.plot(np.arange(0,1.1,0.1),yone,"r",linewidth=5)
plt.plot(np.arange(0,1.1,0.1),ytwo,"r",linewidth=5)
plt.plot([0,0.5,1],effective,"o",markersize=20)
plt.xlim([-0.1,1.1])
plt.ylim([-1,2])

plt.show()
observed=[0,1,0]
print(yvalues)
